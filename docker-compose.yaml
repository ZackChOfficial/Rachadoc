version: "3.3"
services:
  http:
    image: rachadoc/backend
    build: .
    restart: always
    command: bash -c "pipenv run manage collectstatic --noinput && pipenv run manage migrate --noinput && pipenv run gunicorn --preload --bind=0.0.0.0:8000 --workers=4 --timeout=300 --graceful-timeout=150 --log-level=INFO rachadoc.core.wsgi"
    ports:
      - 8000:8000
    env_file:
      - ./rachadoc/core/settings/.env
    depends_on:
      - postgres
    networks:
      - backend
    volumes:
      - static_data:/projects/rachadoc/rachadoc/staticfiles
    expose:
      - 8000

  postgres:
    image: postgis/postgis:14-master
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./rachadoc/core/settings/.env
    networks:
      - backend
    expose:
      - "5432"
  
  redis:
    image: redis:7-alpine
    networks:
      - backend
    expose:
      - "6379"
  

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - static_data:/app/static/
      - web-root:/var/www/html
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
    ports:
      - 80:80
      - "443:443"
    depends_on:
      - http
    networks:
      - backend

    
  websocket:
    build: .
    command: pipenv run daphne -b 0.0.0.0 -p 9000 rachadoc.core.asgi:application
    ports:
      - "9000:9000"
    depends_on:
      - postgres
      - http
    expose:
      - 9000
    networks:
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
  
  celery:
    image: rachadoc/backend
    build: .
    restart: on-failure
    command: pipenv run celery -A rachadoc.core worker
    env_file:
      - ./rachadoc/core/settings/.env
    environment:
      - CELERY_BROKER_URL="redis://redis:6379/0"
      - CELERY_RESULT_BACKEND="redis://redis:6379/0"
    depends_on:
      - http
      - redis
    networks:
      - backend
  
  celery-beat:
    image: rachadoc/backend
    build: .
    restart: on-failure
    command: pipenv run celery -A rachadoc.core beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    env_file:
      - ./rachadoc/core/settings/.env
    depends_on:
      - http
      - redis
    networks:
      - backend
  
  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/lib/letsencrypt
      - web-root:/var/www/html
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/www/html --email tech@rachadoc.com --agree-tos --no-eff-email --staging -d rachadoc.com  -d www.rachadoc.com

volumes:
  postgres_data:
  static_data:
  certbot-etc:
  certbot-var:
  web-root:
    driver: local
    driver_opts:
      type: none
      device: /var/www/html
      o: bind

networks:
  backend: